import i18next, { i18n as I18n } from 'i18next';
import i18nHttpMiddleware from 'i18next-http-middleware';
import * as resources from '../locale';

/**
 * I18n instance initializer
 */
export default async (): Promise<I18n> => {
  // Configure i18n language detector middleware
  i18next.use(i18nHttpMiddleware.LanguageDetector);

  try {
    // Initialize i18n instance
    const i18n = await i18next
      .init({
        detection: {
          order: ['cookie', 'header'],
          lookupCookie: 'i18next',
          lookupHeader: 'accept-language',
          caches: ['cookie'],
        },
        fallbackLng: 'en',
        interpolation: { escapeValue: false },
        ns: [],
        preload: ['en'],
        resources,
        supportedLngs: ['en'],
      })
      .then(() => Promise.resolve(i18next));

    return i18n;
  } catch (err) {
    throw new Error(`failed to initialize i18n instance. ${err}`);
  }
};
