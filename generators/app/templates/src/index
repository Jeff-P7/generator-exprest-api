const bodyParser = require('body-parser');
const express = require('express');
const expressErrorHandler = require('@kazaar/express-error-handler');
const helmet = require('helmet');

const api = require('./api');
const { host, port, env } = require('./config');
<% if (sequelize) { -%>
const { sequelize } = require('./db');
<% } -%>

<% if (winston) { %>const logger = require('./config/logger');<% } else { %>const logger = console;<% } %>

const {
  httpErrorHandler,
  handleServerError,
<% if (celebrate) { -%>
  celebrateErrorParser,
<% } -%>
<% if (sequelize) { -%>
  sequelizeErrorParser,
  handleSequelizeConnectionError,
<% } -%>
} = expressErrorHandler(logger);

/**
 * Express server initialization
 */
const app = express();

app.set('host', host);
app.set('port', port);

/**
 * Application configuration
 */
app.use(bodyParser.json());
app.use(helmet());
<% if (openapi) { %>
/**
 * API documentation
 */
app.use('/docs', express.static(`${__dirname}/api/doc`));
<% } %>
/**
 * API routes
 */
app.use('/api', api);

/**
 * Base route
 */
<% if (openapi) { %>app.get('/', (req, res) => res.redirect('/docs'));<% } else { %>app.get('/', (req, res) => res.sendStatus(200));<% } %>

/**
 * Error handling
 */
<% if (celebrate) { %>app.use(celebrateErrorParser);
<% } -%>
<% if (sequelize) { %>app.use(sequelizeErrorParser);
<% } -%>
app.use(httpErrorHandler);

/**
 * Server start
 */
app
  .listen(port, host, () => {
    logger.info(`App is running at ${host}:${port} in ${env} mode`);
<% if (sequelize) { %>
    sequelize
      .authenticate()
      .then(() => logger.info(`Successfully connected to ${sequelize.config.database} database`))
      .catch(handleSequelizeConnectionError);
<% } -%>
  })
  .on('error', handleServerError);

module.exports = app;
