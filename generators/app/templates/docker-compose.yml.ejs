version: '3'

services:
  app:
    build:
      context: .
      dockerfile: docker/node/Dockerfile
    image: <%= shortname %>-app
    env_file: .env
    container_name: <%= shortname %>-app<% if (sequelize || redis) { %>
    depends_on:<% if (sequelize) { %>
      - db<% } %><% if (redis) { %>
      - redis<% } %>
    environment:<% if (sequelize) { %>
      DB_HOST: db<% } %><% if (redis) { %>
      REDIS_HOST: redis<% } %><% } %>
    expose:
      - ${PORT}
    tty: true
    volumes:
      - /home/node/node_modules<% if (sequelize) { %>

  db:
    build:
      context: .
      dockerfile: docker/db/Dockerfile
    container_name: <%= shortname %>-db
    environment:
      MYSQL_DATABASE: $DB_NAME
      MYSQL_ROOT_PASSWORD: $DB_PASSWORD
      MYSQL_TCP_PORT: $DB_PORT
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - db_data:/var/lib/mysql
      - ./docker/db/my.cnf:/etc/mysql/my.cnf

  migrate:
    image: <%= shortname %>-app
    container_name: <%= shortname %>-migrate
    entrypoint: dockerize -wait tcp://db:{DB_PORT} -timeout 30s npm run migrations:migrate
    environment:
      DB_HOST: db
    depends_on:
      - db
      - app<% } %><% if (redis) { %>

  redis:
    image: redis:alpine
    container_name: <%= shortname %>-redis
    command: --port ${REDIS_PORT}
    expose:
      - ${REDIS_PORT}<% } %><% if (sequelize) { %>

volumes:
  db_data:<% } %>
