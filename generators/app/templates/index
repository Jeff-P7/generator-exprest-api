require('dotenv').config();

const bodyParser = require('body-parser');
const { green, yellow } = require('chalk').default;
const express = require('express');
const expressErrorHandler = require('@kazaar/express-error-handler');
const helmet = require('helmet');
const morgan = require('morgan');

const { host, port, env } = require('./src/config');
<%_ if (sequelize) { _%>
const { sequelize } = require('./src/models');
<%_ } _%>
const router = require('./src/routes');

<%_ if (!winston) { _%>
const logger = console;<%_ } _%>
<%_ if (winston) { _%>
const logger = require('./src/config/winston');<%_ } _%>

const {
  httpErrorHandler,
  handleServerError<%_ if (axios) { _%>,
  axiosErrorParser<%_ } _%><%_ if (celebrate) { _%>,
  celebrateErrorParser<%_ } _%><%_ if (sequelize) { _%>,
  handleSequelizeConnectionError<%_ } _%><%_ if (jwt) { _%>,
  jwtErrorParser<%_ } _%>
} = expressErrorHandler(logger);

/**
 * Express server initialization
 */
const app = express();

/**
 * Application configuration
 */
app.use(
  morgan('dev', {
    stream: {
      write: message => logger.info(message),
    },
  })
);
app.use(bodyParser.json());
app.use(helmet());
<%_ if (react) { _%>
app.use(express.static(`${__dirname}/client/build`));
<%_ } _%>

<%_ if (openapi) { _%>/**
 * API documentation
 */
app.use('/api/docs', express.static(`${__dirname}/doc`));
<%_ } _%>

/**
 * API routes
 */
app.use('/api', router);

<%_ if (react) { _%>/**
 * Frontend files
 */
app.use((req, res, next) => res.sendFile(`${__dirname}/client/build`));

<%_ } _%>
/**
 * Error handling
 */
<%_ if (axios) { _%>
app.use(axiosErrorParser);
<%_ } _%>
<%_ if (celebrate) { _%>
app.use(celebrateErrorParser);
<%_ } _%>
<%_ if (jwt) { _%>
app.use(jwtErrorParser);
<%_ } _%>
app.use(httpErrorHandler);

/**
 * Server start
 */
app
  .listen(port, host, () => {
    logger.info(`${green('✓')} App is running at ${yellow(`${host}:${port}`)} in ${yellow(env)} mode`);

    <%_ if (sequelize) { _%>
    sequelize
      .authenticate()
      .then(() => logger.info(`${green('✓')} Successfully connected to ${yellow(sequelize.config.database)} database`))
      .catch(handleSequelizeConnectionError);
    <%_ } _%>
  })
  .on('error', handleServerError);
