import { expect } from 'chai';
import {
  BadRequest,
  Forbidden,
  HttpError,
  InternalServerError,
  NotFound,
  Unauthorized,
} from 'http-errors';
import { Response } from 'supertest';

const expectHttpError = (res: Response, { name, status }: HttpError) => {
  expect(res.type).to.match(/json/);
  expect(res.status).to.equal(status);

  expect(res.body).to.be.an('object').that.has.all.keys('status', 'name', 'message');
  expect(res.body).to.include({ status, name });
};

export const expectOk = (res: Response): void => {
  expect(res.type).to.match(/json/);
  expect(res.status).to.equal(200);
};

export const expectCreated = (res: Response): void => {
  expect(res.type).to.match(/json/);
  expect(res.status).to.equal(201);
};

export const expectNoContent = (res: Response): void => {
  expect(res.body).to.be.empty;
  expect(res.status).to.equal(204);
};

export const expectBadRequestError = (res: Response): void => {
  expectHttpError(res, new BadRequest());
};

export const expectUnauthorizedError = (res: Response): void => {
  expectHttpError(res, new Unauthorized());
};

export const expectForbiddenError = (res: Response): void => {
  expectHttpError(res, new Forbidden());
};

export const expectNotFoundError = (res: Response): void => {
  expectHttpError(res, new NotFound());
};

export const expectInternalServerError = (res: Response): void => {
  expectHttpError(res, new InternalServerError());
};
